name: CMake on multiple platforms

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch name
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          VALID_REGEX="^(feature|bugfix|hotfix|docs)/[a-z0-9-]+$|^refs/pull/[0-9]+/merge$"
          if [[ ! $BRANCH_NAME =~ $VALID_REGEX ]]; then
            echo "Invalid branch name: $BRANCH_NAME"
            exit 1
          fi

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      # Install libcurl dependency on Linux
      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Build Static libcurl
        if: runner.os == 'Linux'
        run: |
          wget https://curl.se/download/curl-7.88.0.tar.gz
          tar -xzvf curl-7.88.0.tar.gz
          cd curl-7.88.0
          ./configure --disable-shared --enable-static --prefix=${{ github.workspace }}/curl-static
          make -j$(nproc)
          make install
      
      - name: Configure CMake
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_PREFIX_PATH=${{ github.workspace }}/curl-static
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}
